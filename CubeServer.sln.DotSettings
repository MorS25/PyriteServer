<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/CodeEditing/Intellisense/CodeCompletion/AutoCompleteBasicCompletion/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeEditing/Intellisense/CodeCompletion/IntelliSenseCompletingCharacters/CSharpCompletingCharacters/UpgradedFromVSSettings/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeEditing/Localization/CSharpLocalizationOptions/DontAnalyseVerbatimStrings/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=AccessToStaticMemberViaDerivedType/@EntryIndexedValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=LoopCanBeConvertedToQuery/@EntryIndexedValue">HINT</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=PossibleMultipleEnumeration/@EntryIndexedValue">HINT</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=RedundantArgumentDefaultValue/@EntryIndexedValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=RedundantDefaultFieldInitializer/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=RedundantThisQualifier/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=RedundantTypeArgumentsOfMethod/@EntryIndexedValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ReturnTypeCanBeEnumerable_002ELocal/@EntryIndexedValue">HINT</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=SuggestUseVarKeywordEverywhere/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=SuggestUseVarKeywordEvident/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=UnusedMethodReturnValue_002ELocal/@EntryIndexedValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=UseObjectOrCollectionInitializer/@EntryIndexedValue">HINT</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=IEB/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="IEB"&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CSUpdateFileHeader&gt;True&lt;/CSUpdateFileHeader&gt;&lt;CSUseVar&gt;&lt;BehavourStyle&gt;CAN_CHANGE_TO_EXPLICIT&lt;/BehavourStyle&gt;&lt;LocalVariableStyle&gt;ALWAYS_EXPLICIT&lt;/LocalVariableStyle&gt;&lt;ForeachVariableStyle&gt;ALWAYS_EXPLICIT&lt;/ForeachVariableStyle&gt;&lt;/CSUseVar&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSArrangeThisQualifier&gt;True&lt;/CSArrangeThisQualifier&gt;&lt;/Profile&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/RecentlyUsedProfile/@EntryValue">IEB</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/SilentCleanupProfile/@EntryValue">IEB</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_LINQ_QUERY/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARGUMENT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARRAY_AND_OBJECT_INITIALIZER/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PARAMETER/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE/@EntryValue">1</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_ATTRIBUTE_STYLE/@EntryValue">SEPARATE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FIXED_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOR_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOREACH_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_IFELSE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_WHILE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_ANONYMOUS_METHOD_BLOCK/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_CODE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_USER_LINEBREAKS/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/MODIFIERS_ORDER/@EntryValue">public protected internal private new abstract virtual override static sealed readonly extern unsafe volatile async</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ACCESSOR_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_WHILE_ON_NEW_LINE/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/REDUNDANT_THIS_QUALIFIER_STYLE/@EntryValue">ALWAYS_USE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AFTER_TYPECAST_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AROUND_MULTIPLICATIVE_OP/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_SIZEOF_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_TYPEOF_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_WITHIN_SINGLE_LINE_ARRAY_INITIALIZER_BRACES/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/STICK_COMMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_DECLARATION_LPAR/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_INVOCATION_LPAR/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARGUMENTS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LIMIT/@EntryValue">160</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/JavaScriptCodeFormatting/ALIGN_MULTIPLE_DECLARATION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/JavaScriptCodeFormatting/JavaScriptFormatOther/ALIGN_MULTIPLE_DECLARATION/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/CustomPattern/@EntryValue">&lt;Patterns xmlns="urn:shemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
  &lt;!--Do not reorder COM interfaces--&gt;&#xD;
&#xD;
&#xD;
&#xD;
  &lt;Pattern&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;And Weight="100"&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Kind Is="interface"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;HasAttribute CLRName="System.Runtime.InteropServices.InterfaceTypeAttribute"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/And&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
  &lt;/Pattern&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
  &lt;!--Special formatting of NUnit test fixture--&gt;&#xD;
&#xD;
&#xD;
&#xD;
  &lt;Pattern RemoveAllRegions="true"&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;And Weight="100"&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Kind Is="class"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;HasAttribute CLRName="NUnit.Framework.TestFixtureAttribute" Inherit="true"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/And&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!--Setup/Teardow--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;And&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;Kind Is="method"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;Or&gt;&#xD;
&#xD;
&#xD;
&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.SetUpAttribute" Inherit="true"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.TearDownAttribute" Inherit="true"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.FixtureSetUpAttribute" Inherit="true"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.FixtureTearDownAttribute" Inherit="true"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;/Or&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;/And&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!--All other members--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry/&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!--Test methods--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;And Weight="100"&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;Kind Is="method"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;HasAttribute CLRName="NUnit.Framework.TestAttribute" Inherit="false"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;/And&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Name/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
  &lt;/Pattern&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
  &lt;!--Default pattern--&gt;&#xD;
&#xD;
&#xD;
&#xD;
  &lt;Pattern RemoveAllRegions="true"&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!--Delegates--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;And Weight="100"&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;Access Is="public"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;Kind Is="delegate"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;/And&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Name/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!--Fields and constants--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Or&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;Kind Is="field"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;Kind Is="constant"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;/Or&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Kind Order="constant"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Readonly/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Static/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Name/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
&#xD;
    &lt;!--Constructors. Place static one first--&gt;&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Kind Is="constructor"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Static/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--Enums--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Kind Is="enum"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Name/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!--Destructors. Place static one first--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Kind Is="destructor"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Static/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!-- Events --&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Kind Is="event"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Name/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!--Properties--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;And&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;Kind Is="property"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;Not&gt;&#xD;
&#xD;
&#xD;
&#xD;
            &lt;Kind Is="indexer"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;/Not&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;/And&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Static/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Abstract/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Virtual/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Override/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Name/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!--Indexers--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Kind Is="indexer"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Static/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Abstract/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Virtual/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Override/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Name/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!--Methods--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;And&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;Or&gt;&#xD;
&#xD;
&#xD;
&#xD;
            &lt;Kind Is="method"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
            &lt;Kind Is="operator"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
            &lt;HandlesEvent /&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;/Or&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;Not&gt;&#xD;
&#xD;
&#xD;
&#xD;
            &lt;Kind Is="destructor"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
          &lt;/Not&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;/And&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Static/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Abstract/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Virtual/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Override/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Name/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!--all other members--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry/&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
    &lt;!--nested types--&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Kind Is="type"/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Match&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Static/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Abstract/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Virtual/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Override/&gt;&#xD;
&#xD;
&#xD;
&#xD;
        &lt;Name/&gt;&#xD;
&#xD;
&#xD;
&#xD;
      &lt;/Sort&gt;&#xD;
&#xD;
&#xD;
&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
&lt;/Pattern&gt;&#xD;
&lt;/Patterns&gt;&#xD;
</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/LayoutType/@EntryValue">CustomLayout</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/AddImportsToDeepestScope/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/QualifiedUsingAtNestedScope/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/FileHeader/FileHeaderText/@EntryValue">// //------------------------------------------------------------------------------------------------- &#xD;
// // &lt;copyright file="$FILENAME$" company="Microsoft Corporation"&gt;&#xD;
// // Copyright (c) Microsoft Corporation. All rights reserved.&#xD;
// // &lt;/copyright&gt;&#xD;
// //-------------------------------------------------------------------------------------------------&#xD;
</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=AP/@EntryIndexedValue">AP</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=EPM/@EntryIndexedValue">EPM</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=FQDN/@EntryIndexedValue">FQDN</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=GTM/@EntryIndexedValue">GTM</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=HTTPS/@EntryIndexedValue">HTTPS</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=IIS/@EntryIndexedValue">IIS</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=IP/@EntryIndexedValue">IP</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=LB/@EntryIndexedValue">LB</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=VIP/@EntryIndexedValue">VIP</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=VIPS/@EntryIndexedValue">VIPS</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/EventHandlerPatternLong/@EntryValue">$object$_On$event$</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AA_BB" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PublicFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/EventHandlerPatternLong/@EntryValue">$object$_On$event$</s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002EJavaScript_002ECodeStyle_002ESettingsUpgrade_002EJsCodeFormatterSettingsUpgrader/@EntryIndexedValue">True</s:Boolean></wpf:ResourceDictionary>